// JavaScript Document//存储本地缓存var token = localStorage.getItem("token");var login = sessionStorage.getItem('login');//var ajaxUrl ='http://58dj.ejar.com.cn/api/';var ajaxUrl = 'http://192.168.6.125:8099/';          var imgUrl ='http://58dj.ejar.com.cn/api/';//var imgUrl = 'http://192.168.100.10:8080/'function setUrl(data) {	var obj=data;	eval("obj.url='"+imgUrl+"'"); }//if(login == null || token == null) {
//	alert('未登录');
//	localStorage.clear();
//	sessionStorage.clear();
//	$(location).attr('href', 'login.html');
//}//分页初始化变量var obj = '.content',	totalheight = '',	listLoading = false,	listLoadingLock = false,	currentpage = 0;//请求参数var listparam = {	'pageNo': currentpage,	'pageSize': 10};//针对需要分页的数据类型function getList(obj, type, url, listparam, callback) {	if(!listLoadingLock) {		currentpage = parseInt(currentpage);		if(currentpage === 0) {			currentpage = 1;			$(obj).html('');		}		//http wait		listLoading = true;		$.ajax({			type: type,			url: url,			data: listparam,			dataType: 'json',			success: function(r) {				//console.log(r)				if(r.code == 201) {					tip.flag('请先登录', 'error');					setTimeout(function() {						location.href = '';					}, 2000);				} else if(r.code == 200) {					listLoading = false;					callback(obj, r);				} else {					//tip.flag(r.msg, 'error');				}			},			error: function() {				tip.flag('请求错误！', 'error');			}		})	}}//针对获取信息的数据类型function getInfo(type, url, param, callback) {	$.ajax({		type: type,		url: url,		data: param,		dataType: 'json',		success: function(r) {			if(r.code == 201) {				tip.flag('请先登录', 'error');				setTimeout(function() {					location.href = '';				}, 2000);			} else if(r.code == 200) {				callback(r);			} else {				tip.flag(r.msg, 'error');			}		},		error: function() {			tip.flag('请求错误！', 'error');		}	})}//后台专用function getL(obj, type, url, params, callback) {	$.ajax({		type: type,		url: url,		data: params,		dataType: 'json',		success: function(r) {			//console.log(r)			if(r.code == 201) {				tip.flag('请先登录', 'error');				setTimeout(function() {					location.href = '';				}, 2000);			} else if(r.code == 200 || r.code == 300) {				callback(obj, r);			} else {				//tip.flag(r.msg, 'error');			}		},		error: function() {			tip.flag('请求错误！', 'error');		}	})}//滚动加载更多function scrollMore(obj, objtpl, type, url, listparam, dataobj) {	$(obj).scroll(function() {		totalheight = parseFloat($(obj).height()) + parseFloat($(obj).scrollTop());		if($(obj).height() <= totalheight && !listLoading) {			++currentpage;			getList(obj, objtpl, type, url, listparam, dataobj);		}	});}/*提示框    content:提示内容    icon:显示图标（success，error）*/var tip = {	flag: function(content, icon) {		var width = 120;		var height = 110;		var icon = 'img/' + icon + '.png';		var node = $("<div class='_tiping' style='background-image:url(" + icon + ") '>" + content + "</div>");		$('body').append(node);		node.css({			left: ($(window).width() - width) / 2,			top: ($(window).height() - height) / 2,			height: height,			lineHeight: height + 60 + 'px'		});		$('._tiping').fadeOut(3000, function() {			$('._tiping').remove();		});	}};/*获取地址栏参数    name:地址栏参数名*/function GetUrlString(name) {	var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");	var r = window.location.search.substr(1).match(reg);	if(r != null) return unescape(r[2]);	return '';}//时间格式化function formatDateTime(date) {	var y = date.getFullYear();	var m = date.getMonth() + 1;	m = m < 10 ? ('0' + m) : m;	var d = date.getDate();	d = d < 10 ? ('0' + d) : d;	var h = date.getHours();	h = h < 10 ? ('0' + h) : h;	var minute = date.getMinutes();	minute = minute < 10 ? ('0' + minute) : minute;	var second = date.getSeconds();	second = second < 10 ? ('0' + second) : second;	return y + '-' + m + '-' + d + ' ' + h + ':' + minute + ':' + second;}//关联显示function connectDisplay(obj, type, val) {	// obj: 所有选择对象类名，id名	// type: 所有选择对象的属性值	// val: 要选择的属性值	$(obj).each(function() {		if($(this).attr(type) == val) {			$(this).css("display", "block");		} else {			$(this).css("display", "none");		}	})}function setupWebViewJavascriptBridge(callback) {	//iOS使用	if(window.WebViewJavascriptBridge) {		return callback(WebViewJavascriptBridge);	}	if(window.WVJBCallbacks) {		return window.WVJBCallbacks.push(callback);	}	window.WVJBCallbacks = [callback];	var WVJBIframe = document.createElement('iframe');	WVJBIframe.style.display = 'none';	WVJBIframe.src = 'wvjbscheme://__BRIDGE_LOADED__';	document.documentElement.appendChild(WVJBIframe);	setTimeout(function() {		document.documentElement.removeChild(WVJBIframe)	}, 0)	//Android使用	if(window.WebViewJavascriptBridge) {		return callback(WebViewJavascriptBridge)	} else {		document.addEventListener(			'WebViewJavascriptBridgeReady',			function() {				return callback(WebViewJavascriptBridge)			},			false		);	}}var head = document.head || document.getElementsByTagName('head')[0];head.append('<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no" />');var pageAll = { //后台所有分页	yu: '', //总页数	chang: function(pageType, obj, type, url, listparam, callback) { //上一页，下一页		if(pageType === '0') { //上一页			listparam.pageNo -= 1;			if(listparam.pageNo <= 0) {				layer.msg('没有上一页了！', {					time: 1000,				});				listparam.pageNo = 1;			} else {				getL(obj, type, url, listparam, callback);			}		} else if(pageType === '1') { //下一页			listparam.pageNo += 1;			if(listparam.pageNo > pageAll.yu) {				layer.msg('没有下一页了！', {					time: 1000,				});				listparam.pageNo = pageAll.yu;			} else {				getL(obj, type, url, listparam, callback);			}		} else if(pageType === '2') { //初始请求			getL(obj, type, url, listparam, callback);		}	},	writeTotal: function(pageNo, pageSize, count) { //打印出总页数和当前页数		pageAll.yu = parseInt(count / pageSize);		if(count % pageSize != 0) {			pageAll.yu += 1;		}		var pageHtml = '<a class="paginate_button current" aria-controls="DataTables_Table_0" data-dt-idx="1" tabindex="0">';		pageHtml += pageNo + '/' + pageAll.yu		pageHtml += '</a>';		$("#DataTables_Table_0_paginate").find('span').html(pageHtml);	}}